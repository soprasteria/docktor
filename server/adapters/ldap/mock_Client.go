// Code generated by mockery v1.0.0
package ldap

import mock "github.com/stretchr/testify/mock"
import types "github.com/soprasteria/docktor/server/types"

// MockClient is an autogenerated mock type for the Client type
type MockClient struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *MockClient) Close() {
	_m.Called()
}

// Login provides a mock function with given fields: query
func (_m *MockClient) Login(query types.UserQuery) error {
	ret := _m.Called(query)

	var r0 error
	if rf, ok := ret.Get(0).(func(types.UserQuery) error); ok {
		r0 = rf(query)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Open provides a mock function with given fields:
func (_m *MockClient) Open() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Search provides a mock function with given fields: username
func (_m *MockClient) Search(username string) (*UserInfo, error) {
	ret := _m.Called(username)

	var r0 *UserInfo
	if rf, ok := ret.Get(0).(func(string) *UserInfo); ok {
		r0 = rf(username)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*UserInfo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(username)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
